{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/alpinejs/dist/alpine.js","webpack:///./resources/js/bootstrap.js","webpack:///./resources/js/app.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_defineProperty","obj","configurable","writable","ownKeys","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","arrayUnique","array","Array","from","Set","isTesting","navigator","userAgent","includes","warnIfMalformedTemplate","el","directive","tagName","toLowerCase","console","warn","content","childElementCount","camelCase","subject","replace","match","char","toUpperCase","debounce","func","wait","timeout","context","this","args","later","clearTimeout","setTimeout","saferEval","expression","dataContext","additionalHelperVariables","Function","values","xAttrRE","isXAttr","attr","replaceAtAndColonWithStandardSyntax","test","getXAttrs","component","type","directives","attributes","map","parseHtmlAttribute","spreadDirective","spreadObject","$data","concat","entries","directiveOrder","sort","a","b","typeA","indexOf","typeB","sortDirectives","normalizedName","typeMatch","valueMatch","modifiers","startsWith","convertClassStringToArray","classList","filterFn","Boolean","split","transitionIn","show","forceSkip","__x_transition","attrs","showAttr","settingBothSidesOfTransition","index","showCallback","styleValues","duration","modifierValue","origin","first","opacity","scale","second","transitionHelper","transitionHelperIn","some","ensureStringExpression","evaluateReturnExpression","enter","find","enterStart","enterEnd","transitionClasses","transitionClassesIn","transitionOut","hide","hideCallback","transitionHelperOut","leave","leaveStart","leaveEnd","transitionClassesOut","fallback","rawValue","isNumeric","join","hook1","hook2","cancelAnimationFrame","nextFrame","callback","opacityCache","style","transformCache","transform","transformOriginCache","transformOrigin","noModifiers","transitionOpacity","transitionScale","stages","transitionProperty","trim","transitionDuration","transitionTimingFunction","transition","classesDuring","classesStart","classesEnd","originalClasses","__x_original_classes","add","remove","once","isConnected","cleanup","start","during","requestAnimationFrame","Number","getComputedStyle","animationDuration","end","isNaN","called","handleForDirective","templateEl","initialUpdate","extraVars","iteratorNames","parseForExpression","items","ifAttribute","evaluateItemsAndReturnEmptyIfXIfIsPresentAndFalseOnElement","currentEl","item","iterationScopeVariables","scopeVariables","collection","getIterationScopeVariables","currentKey","bindKeyAttribute","generateKeyForIteration","nextEl","__x_for_key","tmpNextEl","parentElement","insertBefore","nextElementSibling","undefined","lookAheadForMatchingKeyedElementAndMoveItIfFound","__x_for","updateElements","clone","document","importNode","addElementInLoopAfterCurrentEl","initializeElements","nextElementFromOldLoop","nextElementFromOldLoopImmutable","nextSibling","removeAnyLeftOverElementsFromPreviousUpdate","forIteratorRE","inMatch","res","iteratorMatch","handleAttributeBindingDirective","attrName","attrType","checked","isArray","val","arrayWrappedValue","options","option","selected","text","updateSelect","setAttribute","classNames","className","newClasses","removeAttribute","isBooleanAttr","setIfChanged","getAttribute","registerListener","event","passive","handler","e","contains","offsetWidth","offsetHeight","runListenerHandler","removeEventListener","addEventListener","listenerTarget","window","body","isKeyEvent","keyModifiers","debounceIndex","splice","keyToModifier","selectedSystemKeyModifiers","modifier","isListeningForASpecificKeyThatHasntBeenPressed","preventDefault","stopPropagation","nextModifier","evaluateCommandExpression","generateModelAssignmentFunction","hasAttribute","currentValue","CustomEvent","detail","newValue","safeParseNumber","multiple","selectedOptions","number","parseFloat","getPrototypeOf","ObjectCreate","ObjectDefineProperty","ObjectDefineProperties","isExtensible","getOwnPropertyNames","preventExtensions","ArrayPush","ArrayConcat","ArrayMap","isUndefined","isFunction","proxyToValueMap","WeakMap","registerProxy","proxy","set","unwrap","replicaOrAny","wrapValue","membrane","valueIsObservable","getProxy","lockShadowTarget","shadowTarget","originalTarget","descriptor","wrapDescriptor","ReactiveProxyHandler","valueObserved","valueMutated","thisArg","argArray","newTarget","shadowIsExtensible","targetIsExtensible","desc","shadowDescriptor","originalDescriptor","unwrapDescriptor","wrapReadOnlyValue","getReadOnlyProxy","ReadOnlyHandler","createShadowTarget","ObjectDotPrototype","defaultValueIsObservable","proto","defaultValueObserved","defaultValueMutated","defaultValueDistortion","getValue","unwrapProxy","ReactiveMembrane","valueDistortion","objectGraph","unwrappedValue","distorted","getReactiveState","readOnly","reactive","distortedValue","reactiveState","reactiveHandler","Proxy","readOnlyHandler","Component","componentForClone","$el","dataAttr","dataExpression","initExpression","unobservedData","getUnobservedData","data","wrapDataInObservable","$refs","getRefsProxy","nextTickStack","$nextTick","watchers","$watch","canonicalComponentElementReference","initReturnedCallback","Alpine","magicProperties","showDirectiveStack","showDirectiveLastElement","pauseReactivity","listenForNewElementsToInitialize","onComponentInitializeds","observable","unwrappedData","copy","unwrap$1","self","updateDom","mutationCallback","wrap","fullDotNotationKey","dotNotationParts","reduce","comparisonData","part","is","initializeComponentCallback","walk","node","firstElementChild","isSameNode","__x","rootEl","walkAndSkipNestedComponents","__x_inserted_me","initializeElement","executeAndClearRemainingShowDirectiveStack","executeAndClearNextTickStack","registerListeners","resolveBoundAttributes","updateElement","shift","reverse","thing","Promise","resolve","finish","nestedPromise","promise","then","rightSideOfExpression","registerModelListener","modelIdx","findIndex","output","innerText","handleTextDirective","innerHTML","handleHtmlDirective","display","removeProperty","handle","handleShowDirective","expressionResult","elementHasAlreadyBeenAdded","handleIfDirective","$dispatch","getDispatchFunction","methodReference","saferEvalNoReturn","dispatchEvent","bubbles","targetNode","MutationObserver","mutations","closestParentComponent","closest","attributeName","rawData","addedNodes","nodeType","matches","observe","childList","subtree","ref","version","pauseMutationObserver","async","readyState","discoverComponents","initializeComponent","discoverUninitializedComponents","listenForNewUninitializedComponentsAtRunTime","querySelectorAll","rootEls","querySelector","error","newEl","addMagicProperty","onComponentInitialized","deferLoadingAlpine","factory","require"],"mappings":"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","file":"/js/app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Alpine = factory());\n}(this, (function () { 'use strict';\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  // Thanks @stimulus:\n  // https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\n  function domReady() {\n    return new Promise(resolve => {\n      if (document.readyState == \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", resolve);\n      } else {\n        resolve();\n      }\n    });\n  }\n  function arrayUnique(array) {\n    return Array.from(new Set(array));\n  }\n  function isTesting() {\n    return navigator.userAgent.includes(\"Node.js\") || navigator.userAgent.includes(\"jsdom\");\n  }\n  function warnIfMalformedTemplate(el, directive) {\n    if (el.tagName.toLowerCase() !== 'template') {\n      console.warn(`Alpine: [${directive}] directive should only be added to <template> tags. See https://github.com/alpinejs/alpine#${directive}`);\n    } else if (el.content.childElementCount !== 1) {\n      console.warn(`Alpine: <template> tag with [${directive}] encountered with multiple element roots. Make sure <template> only has a single child node.`);\n    }\n  }\n  function kebabCase(subject) {\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\s]/, '-').toLowerCase();\n  }\n  function camelCase(subject) {\n    return subject.toLowerCase().replace(/[^a-zA-Z0-9]+(.)/g, (match, char) => char.toUpperCase());\n  }\n  function walk(el, callback) {\n    if (callback(el) === false) return;\n    let node = el.firstElementChild;\n\n    while (node) {\n      walk(node, callback);\n      node = node.nextElementSibling;\n    }\n  }\n  function debounce(func, wait) {\n    var timeout;\n    return function () {\n      var context = this,\n          args = arguments;\n\n      var later = function later() {\n        timeout = null;\n        func.apply(context, args);\n      };\n\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }\n  function saferEval(expression, dataContext, additionalHelperVariables = {}) {\n    if (typeof expression === 'function') {\n      return expression.call(dataContext);\n    }\n\n    return new Function(['$data', ...Object.keys(additionalHelperVariables)], `var __alpine_result; with($data) { __alpine_result = ${expression} }; return __alpine_result`)(dataContext, ...Object.values(additionalHelperVariables));\n  }\n  function saferEvalNoReturn(expression, dataContext, additionalHelperVariables = {}) {\n    if (typeof expression === 'function') {\n      return expression.call(dataContext, additionalHelperVariables['$event']);\n    } // For the cases when users pass only a function reference to the caller: `x-on:click=\"foo\"`\n    // Where \"foo\" is a function. Also, we'll pass the function the event instance when we call it.\n\n\n    if (Object.keys(dataContext).includes(expression)) {\n      let methodReference = new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { return ${expression} }`)(dataContext, ...Object.values(additionalHelperVariables));\n\n      if (typeof methodReference === 'function') {\n        return methodReference.call(dataContext, additionalHelperVariables['$event']);\n      }\n    }\n\n    return new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { ${expression} }`)(dataContext, ...Object.values(additionalHelperVariables));\n  }\n  const xAttrRE = /^x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref|spread)\\b/;\n  function isXAttr(attr) {\n    const name = replaceAtAndColonWithStandardSyntax(attr.name);\n    return xAttrRE.test(name);\n  }\n  function getXAttrs(el, component, type) {\n    let directives = Array.from(el.attributes).filter(isXAttr).map(parseHtmlAttribute); // Get an object of directives from x-spread.\n\n    let spreadDirective = directives.filter(directive => directive.type === 'spread')[0];\n\n    if (spreadDirective) {\n      let spreadObject = saferEval(spreadDirective.expression, component.$data); // Add x-spread directives to the pile of existing directives.\n\n      directives = directives.concat(Object.entries(spreadObject).map(([name, value]) => parseHtmlAttribute({\n        name,\n        value\n      })));\n    }\n\n    if (type) return directives.filter(i => i.type === type);\n    return sortDirectives(directives);\n  }\n\n  function sortDirectives(directives) {\n    let directiveOrder = ['bind', 'model', 'show', 'catch-all'];\n    return directives.sort((a, b) => {\n      let typeA = directiveOrder.indexOf(a.type) === -1 ? 'catch-all' : a.type;\n      let typeB = directiveOrder.indexOf(b.type) === -1 ? 'catch-all' : b.type;\n      return directiveOrder.indexOf(typeA) - directiveOrder.indexOf(typeB);\n    });\n  }\n\n  function parseHtmlAttribute({\n    name,\n    value\n  }) {\n    const normalizedName = replaceAtAndColonWithStandardSyntax(name);\n    const typeMatch = normalizedName.match(xAttrRE);\n    const valueMatch = normalizedName.match(/:([a-zA-Z\\-:]+)/);\n    const modifiers = normalizedName.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || [];\n    return {\n      type: typeMatch ? typeMatch[1] : null,\n      value: valueMatch ? valueMatch[1] : null,\n      modifiers: modifiers.map(i => i.replace('.', '')),\n      expression: value\n    };\n  }\n\n  function isBooleanAttr(attrName) {\n    // As per HTML spec table https://html.spec.whatwg.org/multipage/indices.html#attributes-3:boolean-attribute\n    // Array roughly ordered by estimated usage\n    const booleanAttributes = ['disabled', 'checked', 'required', 'readonly', 'hidden', 'open', 'selected', 'autofocus', 'itemscope', 'multiple', 'novalidate', 'allowfullscreen', 'allowpaymentrequest', 'formnovalidate', 'autoplay', 'controls', 'loop', 'muted', 'playsinline', 'default', 'ismap', 'reversed', 'async', 'defer', 'nomodule'];\n    return booleanAttributes.includes(attrName);\n  }\n  function replaceAtAndColonWithStandardSyntax(name) {\n    if (name.startsWith('@')) {\n      return name.replace('@', 'x-on:');\n    } else if (name.startsWith(':')) {\n      return name.replace(':', 'x-bind:');\n    }\n\n    return name;\n  }\n  function convertClassStringToArray(classList, filterFn = Boolean) {\n    return classList.split(' ').filter(filterFn);\n  }\n  const TRANSITION_TYPE_IN = 'in';\n  const TRANSITION_TYPE_OUT = 'out';\n  function transitionIn(el, show, component, forceSkip = false) {\n    // We don't want to transition on the initial page load.\n    if (forceSkip) return show();\n\n    if (el.__x_transition && el.__x_transition.type === TRANSITION_TYPE_IN) {\n      // there is already a similar transition going on, this was probably triggered by\n      // a change in a different property, let's just leave the previous one doing its job\n      return;\n    }\n\n    const attrs = getXAttrs(el, component, 'transition');\n    const showAttr = getXAttrs(el, component, 'show')[0]; // If this is triggered by a x-show.transition.\n\n    if (showAttr && showAttr.modifiers.includes('transition')) {\n      let modifiers = showAttr.modifiers; // If x-show.transition.out, we'll skip the \"in\" transition.\n\n      if (modifiers.includes('out') && !modifiers.includes('in')) return show();\n      const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out'); // If x-show.transition.in...out... only use \"in\" related modifiers for this transition.\n\n      modifiers = settingBothSidesOfTransition ? modifiers.filter((i, index) => index < modifiers.indexOf('out')) : modifiers;\n      transitionHelperIn(el, modifiers, show); // Otherwise, we can assume x-transition:enter.\n    } else if (attrs.some(attr => ['enter', 'enter-start', 'enter-end'].includes(attr.value))) {\n      transitionClassesIn(el, component, attrs, show);\n    } else {\n      // If neither, just show that damn thing.\n      show();\n    }\n  }\n  function transitionOut(el, hide, component, forceSkip = false) {\n    // We don't want to transition on the initial page load.\n    if (forceSkip) return hide();\n\n    if (el.__x_transition && el.__x_transition.type === TRANSITION_TYPE_OUT) {\n      // there is already a similar transition going on, this was probably triggered by\n      // a change in a different property, let's just leave the previous one doing its job\n      return;\n    }\n\n    const attrs = getXAttrs(el, component, 'transition');\n    const showAttr = getXAttrs(el, component, 'show')[0];\n\n    if (showAttr && showAttr.modifiers.includes('transition')) {\n      let modifiers = showAttr.modifiers;\n      if (modifiers.includes('in') && !modifiers.includes('out')) return hide();\n      const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out');\n      modifiers = settingBothSidesOfTransition ? modifiers.filter((i, index) => index > modifiers.indexOf('out')) : modifiers;\n      transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hide);\n    } else if (attrs.some(attr => ['leave', 'leave-start', 'leave-end'].includes(attr.value))) {\n      transitionClassesOut(el, component, attrs, hide);\n    } else {\n      hide();\n    }\n  }\n  function transitionHelperIn(el, modifiers, showCallback) {\n    // Default values inspired by: https://material.io/design/motion/speed.html#duration\n    const styleValues = {\n      duration: modifierValue(modifiers, 'duration', 150),\n      origin: modifierValue(modifiers, 'origin', 'center'),\n      first: {\n        opacity: 0,\n        scale: modifierValue(modifiers, 'scale', 95)\n      },\n      second: {\n        opacity: 1,\n        scale: 100\n      }\n    };\n    transitionHelper(el, modifiers, showCallback, () => {}, styleValues, TRANSITION_TYPE_IN);\n  }\n  function transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hideCallback) {\n    // Make the \"out\" transition .5x slower than the \"in\". (Visually better)\n    // HOWEVER, if they explicitly set a duration for the \"out\" transition,\n    // use that.\n    const duration = settingBothSidesOfTransition ? modifierValue(modifiers, 'duration', 150) : modifierValue(modifiers, 'duration', 150) / 2;\n    const styleValues = {\n      duration: duration,\n      origin: modifierValue(modifiers, 'origin', 'center'),\n      first: {\n        opacity: 1,\n        scale: 100\n      },\n      second: {\n        opacity: 0,\n        scale: modifierValue(modifiers, 'scale', 95)\n      }\n    };\n    transitionHelper(el, modifiers, () => {}, hideCallback, styleValues, TRANSITION_TYPE_OUT);\n  }\n\n  function modifierValue(modifiers, key, fallback) {\n    // If the modifier isn't present, use the default.\n    if (modifiers.indexOf(key) === -1) return fallback; // If it IS present, grab the value after it: x-show.transition.duration.500ms\n\n    const rawValue = modifiers[modifiers.indexOf(key) + 1];\n    if (!rawValue) return fallback;\n\n    if (key === 'scale') {\n      // Check if the very next value is NOT a number and return the fallback.\n      // If x-show.transition.scale, we'll use the default scale value.\n      // That is how a user opts out of the opacity transition.\n      if (!isNumeric(rawValue)) return fallback;\n    }\n\n    if (key === 'duration') {\n      // Support x-show.transition.duration.500ms && duration.500\n      let match = rawValue.match(/([0-9]+)ms/);\n      if (match) return match[1];\n    }\n\n    if (key === 'origin') {\n      // Support chaining origin directions: x-show.transition.top.right\n      if (['top', 'right', 'left', 'center', 'bottom'].includes(modifiers[modifiers.indexOf(key) + 2])) {\n        return [rawValue, modifiers[modifiers.indexOf(key) + 2]].join(' ');\n      }\n    }\n\n    return rawValue;\n  }\n\n  function transitionHelper(el, modifiers, hook1, hook2, styleValues, type) {\n    // clear the previous transition if exists to avoid caching the wrong styles\n    if (el.__x_transition) {\n      cancelAnimationFrame(el.__x_transition.nextFrame);\n      el.__x_transition.callback && el.__x_transition.callback();\n    } // If the user set these style values, we'll put them back when we're done with them.\n\n\n    const opacityCache = el.style.opacity;\n    const transformCache = el.style.transform;\n    const transformOriginCache = el.style.transformOrigin; // If no modifiers are present: x-show.transition, we'll default to both opacity and scale.\n\n    const noModifiers = !modifiers.includes('opacity') && !modifiers.includes('scale');\n    const transitionOpacity = noModifiers || modifiers.includes('opacity');\n    const transitionScale = noModifiers || modifiers.includes('scale'); // These are the explicit stages of a transition (same stages for in and for out).\n    // This way you can get a birds eye view of the hooks, and the differences\n    // between them.\n\n    const stages = {\n      start() {\n        if (transitionOpacity) el.style.opacity = styleValues.first.opacity;\n        if (transitionScale) el.style.transform = `scale(${styleValues.first.scale / 100})`;\n      },\n\n      during() {\n        if (transitionScale) el.style.transformOrigin = styleValues.origin;\n        el.style.transitionProperty = [transitionOpacity ? `opacity` : ``, transitionScale ? `transform` : ``].join(' ').trim();\n        el.style.transitionDuration = `${styleValues.duration / 1000}s`;\n        el.style.transitionTimingFunction = `cubic-bezier(0.4, 0.0, 0.2, 1)`;\n      },\n\n      show() {\n        hook1();\n      },\n\n      end() {\n        if (transitionOpacity) el.style.opacity = styleValues.second.opacity;\n        if (transitionScale) el.style.transform = `scale(${styleValues.second.scale / 100})`;\n      },\n\n      hide() {\n        hook2();\n      },\n\n      cleanup() {\n        if (transitionOpacity) el.style.opacity = opacityCache;\n        if (transitionScale) el.style.transform = transformCache;\n        if (transitionScale) el.style.transformOrigin = transformOriginCache;\n        el.style.transitionProperty = null;\n        el.style.transitionDuration = null;\n        el.style.transitionTimingFunction = null;\n      }\n\n    };\n    transition(el, stages, type);\n  }\n  function transitionClassesIn(el, component, directives, showCallback) {\n    let ensureStringExpression = expression => {\n      return typeof expression === 'function' ? component.evaluateReturnExpression(el, expression) : expression;\n    };\n\n    const enter = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter') || {\n      expression: ''\n    }).expression));\n    const enterStart = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter-start') || {\n      expression: ''\n    }).expression));\n    const enterEnd = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter-end') || {\n      expression: ''\n    }).expression));\n    transitionClasses(el, enter, enterStart, enterEnd, showCallback, () => {}, TRANSITION_TYPE_IN);\n  }\n  function transitionClassesOut(el, component, directives, hideCallback) {\n    const leave = convertClassStringToArray((directives.find(i => i.value === 'leave') || {\n      expression: ''\n    }).expression);\n    const leaveStart = convertClassStringToArray((directives.find(i => i.value === 'leave-start') || {\n      expression: ''\n    }).expression);\n    const leaveEnd = convertClassStringToArray((directives.find(i => i.value === 'leave-end') || {\n      expression: ''\n    }).expression);\n    transitionClasses(el, leave, leaveStart, leaveEnd, () => {}, hideCallback, TRANSITION_TYPE_OUT);\n  }\n  function transitionClasses(el, classesDuring, classesStart, classesEnd, hook1, hook2, type) {\n    // clear the previous transition if exists to avoid caching the wrong classes\n    if (el.__x_transition) {\n      cancelAnimationFrame(el.__x_transition.nextFrame);\n      el.__x_transition.callback && el.__x_transition.callback();\n    }\n\n    const originalClasses = el.__x_original_classes || [];\n    const stages = {\n      start() {\n        el.classList.add(...classesStart);\n      },\n\n      during() {\n        el.classList.add(...classesDuring);\n      },\n\n      show() {\n        hook1();\n      },\n\n      end() {\n        // Don't remove classes that were in the original class attribute.\n        el.classList.remove(...classesStart.filter(i => !originalClasses.includes(i)));\n        el.classList.add(...classesEnd);\n      },\n\n      hide() {\n        hook2();\n      },\n\n      cleanup() {\n        el.classList.remove(...classesDuring.filter(i => !originalClasses.includes(i)));\n        el.classList.remove(...classesEnd.filter(i => !originalClasses.includes(i)));\n      }\n\n    };\n    transition(el, stages, type);\n  }\n  function transition(el, stages, type) {\n    el.__x_transition = {\n      // Set transition type so we can avoid clearing transition if the direction is the same\n      type: type,\n      // create a callback for the last stages of the transition so we can call it\n      // from different point and early terminate it. Once will ensure that function\n      // is only called one time.\n      callback: once(() => {\n        stages.hide(); // Adding an \"isConnected\" check, in case the callback\n        // removed the element from the DOM.\n\n        if (el.isConnected) {\n          stages.cleanup();\n        }\n\n        delete el.__x_transition;\n      }),\n      // This store the next animation frame so we can cancel it\n      nextFrame: null\n    };\n    stages.start();\n    stages.during();\n    el.__x_transition.nextFrame = requestAnimationFrame(() => {\n      // Note: Safari's transitionDuration property will list out comma separated transition durations\n      // for every single transition property. Let's grab the first one and call it a day.\n      let duration = Number(getComputedStyle(el).transitionDuration.replace(/,.*/, '').replace('s', '')) * 1000;\n\n      if (duration === 0) {\n        duration = Number(getComputedStyle(el).animationDuration.replace('s', '')) * 1000;\n      }\n\n      stages.show();\n      el.__x_transition.nextFrame = requestAnimationFrame(() => {\n        stages.end();\n        setTimeout(el.__x_transition.callback, duration);\n      });\n    });\n  }\n  function isNumeric(subject) {\n    return !isNaN(subject);\n  } // Thanks @vuejs\n  // https://github.com/vuejs/vue/blob/4de4649d9637262a9b007720b59f80ac72a5620c/src/shared/util.js\n\n  function once(callback) {\n    let called = false;\n    return function () {\n      if (!called) {\n        called = true;\n        callback.apply(this, arguments);\n      }\n    };\n  }\n\n  function handleForDirective(component, templateEl, expression, initialUpdate, extraVars) {\n    warnIfMalformedTemplate(templateEl, 'x-for');\n    let iteratorNames = typeof expression === 'function' ? parseForExpression(component.evaluateReturnExpression(templateEl, expression)) : parseForExpression(expression);\n    let items = evaluateItemsAndReturnEmptyIfXIfIsPresentAndFalseOnElement(component, templateEl, iteratorNames, extraVars); // As we walk the array, we'll also walk the DOM (updating/creating as we go).\n\n    let currentEl = templateEl;\n    items.forEach((item, index) => {\n      let iterationScopeVariables = getIterationScopeVariables(iteratorNames, item, index, items, extraVars());\n      let currentKey = generateKeyForIteration(component, templateEl, index, iterationScopeVariables);\n      let nextEl = lookAheadForMatchingKeyedElementAndMoveItIfFound(currentEl.nextElementSibling, currentKey); // If we haven't found a matching key, insert the element at the current position.\n\n      if (!nextEl) {\n        nextEl = addElementInLoopAfterCurrentEl(templateEl, currentEl); // And transition it in if it's not the first page load.\n\n        transitionIn(nextEl, () => {}, component, initialUpdate);\n        nextEl.__x_for = iterationScopeVariables;\n        component.initializeElements(nextEl, () => nextEl.__x_for); // Otherwise update the element we found.\n      } else {\n        // Temporarily remove the key indicator to allow the normal \"updateElements\" to work.\n        delete nextEl.__x_for_key;\n        nextEl.__x_for = iterationScopeVariables;\n        component.updateElements(nextEl, () => nextEl.__x_for);\n      }\n\n      currentEl = nextEl;\n      currentEl.__x_for_key = currentKey;\n    });\n    removeAnyLeftOverElementsFromPreviousUpdate(currentEl, component);\n  } // This was taken from VueJS 2.* core. Thanks Vue!\n\n  function parseForExpression(expression) {\n    let forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\n    let stripParensRE = /^\\(|\\)$/g;\n    let forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\n    let inMatch = expression.match(forAliasRE);\n    if (!inMatch) return;\n    let res = {};\n    res.items = inMatch[2].trim();\n    let item = inMatch[1].trim().replace(stripParensRE, '');\n    let iteratorMatch = item.match(forIteratorRE);\n\n    if (iteratorMatch) {\n      res.item = item.replace(forIteratorRE, '').trim();\n      res.index = iteratorMatch[1].trim();\n\n      if (iteratorMatch[2]) {\n        res.collection = iteratorMatch[2].trim();\n      }\n    } else {\n      res.item = item;\n    }\n\n    return res;\n  }\n\n  function getIterationScopeVariables(iteratorNames, item, index, items, extraVars) {\n    // We must create a new object, so each iteration has a new scope\n    let scopeVariables = extraVars ? _objectSpread2({}, extraVars) : {};\n    scopeVariables[iteratorNames.item] = item;\n    if (iteratorNames.index) scopeVariables[iteratorNames.index] = index;\n    if (iteratorNames.collection) scopeVariables[iteratorNames.collection] = items;\n    return scopeVariables;\n  }\n\n  function generateKeyForIteration(component, el, index, iterationScopeVariables) {\n    let bindKeyAttribute = getXAttrs(el, component, 'bind').filter(attr => attr.value === 'key')[0]; // If the dev hasn't specified a key, just return the index of the iteration.\n\n    if (!bindKeyAttribute) return index;\n    return component.evaluateReturnExpression(el, bindKeyAttribute.expression, () => iterationScopeVariables);\n  }\n\n  function evaluateItemsAndReturnEmptyIfXIfIsPresentAndFalseOnElement(component, el, iteratorNames, extraVars) {\n    let ifAttribute = getXAttrs(el, component, 'if')[0];\n\n    if (ifAttribute && !component.evaluateReturnExpression(el, ifAttribute.expression)) {\n      return [];\n    }\n\n    return component.evaluateReturnExpression(el, iteratorNames.items, extraVars);\n  }\n\n  function addElementInLoopAfterCurrentEl(templateEl, currentEl) {\n    let clone = document.importNode(templateEl.content, true);\n    currentEl.parentElement.insertBefore(clone, currentEl.nextElementSibling);\n    return currentEl.nextElementSibling;\n  }\n\n  function lookAheadForMatchingKeyedElementAndMoveItIfFound(nextEl, currentKey) {\n    if (!nextEl) return; // If the the key's DO match, no need to look ahead.\n\n    if (nextEl.__x_for_key === currentKey) return nextEl; // If they don't, we'll look ahead for a match.\n    // If we find it, we'll move it to the current position in the loop.\n\n    let tmpNextEl = nextEl;\n\n    while (tmpNextEl) {\n      if (tmpNextEl.__x_for_key === currentKey) {\n        return tmpNextEl.parentElement.insertBefore(tmpNextEl, nextEl);\n      }\n\n      tmpNextEl = tmpNextEl.nextElementSibling && tmpNextEl.nextElementSibling.__x_for_key !== undefined ? tmpNextEl.nextElementSibling : false;\n    }\n  }\n\n  function removeAnyLeftOverElementsFromPreviousUpdate(currentEl, component) {\n    var nextElementFromOldLoop = currentEl.nextElementSibling && currentEl.nextElementSibling.__x_for_key !== undefined ? currentEl.nextElementSibling : false;\n\n    while (nextElementFromOldLoop) {\n      let nextElementFromOldLoopImmutable = nextElementFromOldLoop;\n      let nextSibling = nextElementFromOldLoop.nextElementSibling;\n      transitionOut(nextElementFromOldLoop, () => {\n        nextElementFromOldLoopImmutable.remove();\n      }, component);\n      nextElementFromOldLoop = nextSibling && nextSibling.__x_for_key !== undefined ? nextSibling : false;\n    }\n  }\n\n  function handleAttributeBindingDirective(component, el, attrName, expression, extraVars, attrType, modifiers) {\n    var value = component.evaluateReturnExpression(el, expression, extraVars);\n\n    if (attrName === 'value') {\n      // If nested model key is undefined, set the default value to empty string.\n      if (value === undefined && expression.match(/\\./).length) {\n        value = '';\n      }\n\n      if (el.type === 'radio') {\n        // Set radio value from x-bind:value, if no \"value\" attribute exists.\n        // If there are any initial state values, radio will have a correct\n        // \"checked\" value since x-bind:value is processed before x-model.\n        if (el.attributes.value === undefined && attrType === 'bind') {\n          el.value = value;\n        } else if (attrType !== 'bind') {\n          el.checked = el.value == value;\n        }\n      } else if (el.type === 'checkbox') {\n        // If we are explicitly binding a string to the :value, set the string,\n        // If the value is a boolean, leave it alone, it will be set to \"on\"\n        // automatically.\n        if (typeof value === 'string' && attrType === 'bind') {\n          el.value = value;\n        } else if (attrType !== 'bind') {\n          if (Array.isArray(value)) {\n            // I'm purposely not using Array.includes here because it's\n            // strict, and because of Numeric/String mis-casting, I\n            // want the \"includes\" to be \"fuzzy\".\n            el.checked = value.some(val => val == el.value);\n          } else {\n            el.checked = !!value;\n          }\n        }\n      } else if (el.tagName === 'SELECT') {\n        updateSelect(el, value);\n      } else {\n        if (el.value === value) return;\n        el.value = value;\n      }\n    } else if (attrName === 'class') {\n      if (Array.isArray(value)) {\n        const originalClasses = el.__x_original_classes || [];\n        el.setAttribute('class', arrayUnique(originalClasses.concat(value)).join(' '));\n      } else if (typeof value === 'object') {\n        // Sorting the keys / class names by their boolean value will ensure that\n        // anything that evaluates to `false` and needs to remove classes is run first.\n        const keysSortedByBooleanValue = Object.keys(value).sort((a, b) => value[a] - value[b]);\n        keysSortedByBooleanValue.forEach(classNames => {\n          if (value[classNames]) {\n            convertClassStringToArray(classNames).forEach(className => el.classList.add(className));\n          } else {\n            convertClassStringToArray(classNames).forEach(className => el.classList.remove(className));\n          }\n        });\n      } else {\n        const originalClasses = el.__x_original_classes || [];\n        const newClasses = convertClassStringToArray(value);\n        el.setAttribute('class', arrayUnique(originalClasses.concat(newClasses)).join(' '));\n      }\n    } else {\n      attrName = modifiers.includes('camel') ? camelCase(attrName) : attrName; // If an attribute's bound value is null, undefined or false, remove the attribute\n\n      if ([null, undefined, false].includes(value)) {\n        el.removeAttribute(attrName);\n      } else {\n        isBooleanAttr(attrName) ? setIfChanged(el, attrName, attrName) : setIfChanged(el, attrName, value);\n      }\n    }\n  }\n\n  function setIfChanged(el, attrName, value) {\n    if (el.getAttribute(attrName) != value) {\n      el.setAttribute(attrName, value);\n    }\n  }\n\n  function updateSelect(el, value) {\n    const arrayWrappedValue = [].concat(value).map(value => {\n      return value + '';\n    });\n    Array.from(el.options).forEach(option => {\n      option.selected = arrayWrappedValue.includes(option.value || option.text);\n    });\n  }\n\n  function handleTextDirective(el, output, expression) {\n    // If nested model key is undefined, set the default value to empty string.\n    if (output === undefined && expression.match(/\\./)) {\n      output = '';\n    }\n\n    el.innerText = output;\n  }\n\n  function handleHtmlDirective(component, el, expression, extraVars) {\n    el.innerHTML = component.evaluateReturnExpression(el, expression, extraVars);\n  }\n\n  function handleShowDirective(component, el, value, modifiers, initialUpdate = false) {\n    const hide = () => {\n      el.style.display = 'none';\n    };\n\n    const show = () => {\n      if (el.style.length === 1 && el.style.display === 'none') {\n        el.removeAttribute('style');\n      } else {\n        el.style.removeProperty('display');\n      }\n    };\n\n    if (initialUpdate === true) {\n      if (value) {\n        show();\n      } else {\n        hide();\n      }\n\n      return;\n    }\n\n    const handle = resolve => {\n      if (value) {\n        if (el.style.display === 'none' || el.__x_transition) {\n          transitionIn(el, () => {\n            show();\n          }, component);\n        }\n\n        resolve(() => {});\n      } else {\n        if (el.style.display !== 'none') {\n          transitionOut(el, () => {\n            resolve(() => {\n              hide();\n            });\n          }, component);\n        } else {\n          resolve(() => {});\n        }\n      }\n    }; // The working of x-show is a bit complex because we need to\n    // wait for any child transitions to finish before hiding\n    // some element. Also, this has to be done recursively.\n    // If x-show.immediate, foregoe the waiting.\n\n\n    if (modifiers.includes('immediate')) {\n      handle(finish => finish());\n      return;\n    } // x-show is encountered during a DOM tree walk. If an element\n    // we encounter is NOT a child of another x-show element we\n    // can execute the previous x-show stack (if one exists).\n\n\n    if (component.showDirectiveLastElement && !component.showDirectiveLastElement.contains(el)) {\n      component.executeAndClearRemainingShowDirectiveStack();\n    }\n\n    component.showDirectiveStack.push(handle);\n    component.showDirectiveLastElement = el;\n  }\n\n  function handleIfDirective(component, el, expressionResult, initialUpdate, extraVars) {\n    warnIfMalformedTemplate(el, 'x-if');\n    const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true;\n\n    if (expressionResult && (!elementHasAlreadyBeenAdded || el.__x_transition)) {\n      const clone = document.importNode(el.content, true);\n      el.parentElement.insertBefore(clone, el.nextElementSibling);\n      transitionIn(el.nextElementSibling, () => {}, component, initialUpdate);\n      component.initializeElements(el.nextElementSibling, extraVars);\n      el.nextElementSibling.__x_inserted_me = true;\n    } else if (!expressionResult && elementHasAlreadyBeenAdded) {\n      transitionOut(el.nextElementSibling, () => {\n        el.nextElementSibling.remove();\n      }, component, initialUpdate);\n    }\n  }\n\n  function registerListener(component, el, event, modifiers, expression, extraVars = {}) {\n    const options = {\n      passive: modifiers.includes('passive')\n    };\n\n    if (modifiers.includes('camel')) {\n      event = camelCase(event);\n    }\n\n    if (modifiers.includes('away')) {\n      let handler = e => {\n        // Don't do anything if the click came from the element or within it.\n        if (el.contains(e.target)) return; // Don't do anything if this element isn't currently visible.\n\n        if (el.offsetWidth < 1 && el.offsetHeight < 1) return; // Now that we are sure the element is visible, AND the click\n        // is from outside it, let's run the expression.\n\n        runListenerHandler(component, expression, e, extraVars);\n\n        if (modifiers.includes('once')) {\n          document.removeEventListener(event, handler, options);\n        }\n      }; // Listen for this event at the root level.\n\n\n      document.addEventListener(event, handler, options);\n    } else {\n      let listenerTarget = modifiers.includes('window') ? window : modifiers.includes('document') ? document : el;\n\n      let handler = e => {\n        // Remove this global event handler if the element that declared it\n        // has been removed. It's now stale.\n        if (listenerTarget === window || listenerTarget === document) {\n          if (!document.body.contains(el)) {\n            listenerTarget.removeEventListener(event, handler, options);\n            return;\n          }\n        }\n\n        if (isKeyEvent(event)) {\n          if (isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers)) {\n            return;\n          }\n        }\n\n        if (modifiers.includes('prevent')) e.preventDefault();\n        if (modifiers.includes('stop')) e.stopPropagation(); // If the .self modifier isn't present, or if it is present and\n        // the target element matches the element we are registering the\n        // event on, run the handler\n\n        if (!modifiers.includes('self') || e.target === el) {\n          const returnValue = runListenerHandler(component, expression, e, extraVars);\n\n          if (returnValue === false) {\n            e.preventDefault();\n          } else {\n            if (modifiers.includes('once')) {\n              listenerTarget.removeEventListener(event, handler, options);\n            }\n          }\n        }\n      };\n\n      if (modifiers.includes('debounce')) {\n        let nextModifier = modifiers[modifiers.indexOf('debounce') + 1] || 'invalid-wait';\n        let wait = isNumeric(nextModifier.split('ms')[0]) ? Number(nextModifier.split('ms')[0]) : 250;\n        handler = debounce(handler, wait);\n      }\n\n      listenerTarget.addEventListener(event, handler, options);\n    }\n  }\n\n  function runListenerHandler(component, expression, e, extraVars) {\n    return component.evaluateCommandExpression(e.target, expression, () => {\n      return _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        '$event': e\n      });\n    });\n  }\n\n  function isKeyEvent(event) {\n    return ['keydown', 'keyup'].includes(event);\n  }\n\n  function isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers) {\n    let keyModifiers = modifiers.filter(i => {\n      return !['window', 'document', 'prevent', 'stop'].includes(i);\n    });\n\n    if (keyModifiers.includes('debounce')) {\n      let debounceIndex = keyModifiers.indexOf('debounce');\n      keyModifiers.splice(debounceIndex, isNumeric((keyModifiers[debounceIndex + 1] || 'invalid-wait').split('ms')[0]) ? 2 : 1);\n    } // If no modifier is specified, we'll call it a press.\n\n\n    if (keyModifiers.length === 0) return false; // If one is passed, AND it matches the key pressed, we'll call it a press.\n\n    if (keyModifiers.length === 1 && keyModifiers[0] === keyToModifier(e.key)) return false; // The user is listening for key combinations.\n\n    const systemKeyModifiers = ['ctrl', 'shift', 'alt', 'meta', 'cmd', 'super'];\n    const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier));\n    keyModifiers = keyModifiers.filter(i => !selectedSystemKeyModifiers.includes(i));\n\n    if (selectedSystemKeyModifiers.length > 0) {\n      const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {\n        // Alias \"cmd\" and \"super\" to \"meta\"\n        if (modifier === 'cmd' || modifier === 'super') modifier = 'meta';\n        return e[`${modifier}Key`];\n      }); // If all the modifiers selected are pressed, ...\n\n      if (activelyPressedKeyModifiers.length === selectedSystemKeyModifiers.length) {\n        // AND the remaining key is pressed as well. It's a press.\n        if (keyModifiers[0] === keyToModifier(e.key)) return false;\n      }\n    } // We'll call it NOT a valid keypress.\n\n\n    return true;\n  }\n\n  function keyToModifier(key) {\n    switch (key) {\n      case '/':\n        return 'slash';\n\n      case ' ':\n      case 'Spacebar':\n        return 'space';\n\n      default:\n        return key && kebabCase(key);\n    }\n  }\n\n  function registerModelListener(component, el, modifiers, expression, extraVars) {\n    // If the element we are binding to is a select, a radio, or checkbox\n    // we'll listen for the change event instead of the \"input\" event.\n    var event = el.tagName.toLowerCase() === 'select' || ['checkbox', 'radio'].includes(el.type) || modifiers.includes('lazy') ? 'change' : 'input';\n    const listenerExpression = `${expression} = rightSideOfExpression($event, ${expression})`;\n    registerListener(component, el, event, modifiers, listenerExpression, () => {\n      return _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        rightSideOfExpression: generateModelAssignmentFunction(el, modifiers, expression)\n      });\n    });\n  }\n\n  function generateModelAssignmentFunction(el, modifiers, expression) {\n    if (el.type === 'radio') {\n      // Radio buttons only work properly when they share a name attribute.\n      // People might assume we take care of that for them, because\n      // they already set a shared \"x-model\" attribute.\n      if (!el.hasAttribute('name')) el.setAttribute('name', expression);\n    }\n\n    return (event, currentValue) => {\n      // Check for event.detail due to an issue where IE11 handles other events as a CustomEvent.\n      if (event instanceof CustomEvent && event.detail) {\n        return event.detail;\n      } else if (el.type === 'checkbox') {\n        // If the data we are binding to is an array, toggle its value inside the array.\n        if (Array.isArray(currentValue)) {\n          const newValue = modifiers.includes('number') ? safeParseNumber(event.target.value) : event.target.value;\n          return event.target.checked ? currentValue.concat([newValue]) : currentValue.filter(i => i !== newValue);\n        } else {\n          return event.target.checked;\n        }\n      } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\n        return modifiers.includes('number') ? Array.from(event.target.selectedOptions).map(option => {\n          const rawValue = option.value || option.text;\n          return safeParseNumber(rawValue);\n        }) : Array.from(event.target.selectedOptions).map(option => {\n          return option.value || option.text;\n        });\n      } else {\n        const rawValue = event.target.value;\n        return modifiers.includes('number') ? safeParseNumber(rawValue) : modifiers.includes('trim') ? rawValue.trim() : rawValue;\n      }\n    };\n  }\n\n  function safeParseNumber(rawValue) {\n    const number = rawValue ? parseFloat(rawValue) : null;\n    return isNumeric(number) ? number : rawValue;\n  }\n\n  /**\n   * Copyright (C) 2017 salesforce.com, inc.\n   */\n  const { isArray } = Array;\n  const { getPrototypeOf, create: ObjectCreate, defineProperty: ObjectDefineProperty, defineProperties: ObjectDefineProperties, isExtensible, getOwnPropertyDescriptor, getOwnPropertyNames, getOwnPropertySymbols, preventExtensions, hasOwnProperty, } = Object;\n  const { push: ArrayPush, concat: ArrayConcat, map: ArrayMap, } = Array.prototype;\n  function isUndefined(obj) {\n      return obj === undefined;\n  }\n  function isFunction(obj) {\n      return typeof obj === 'function';\n  }\n  function isObject(obj) {\n      return typeof obj === 'object';\n  }\n  const proxyToValueMap = new WeakMap();\n  function registerProxy(proxy, value) {\n      proxyToValueMap.set(proxy, value);\n  }\n  const unwrap = (replicaOrAny) => proxyToValueMap.get(replicaOrAny) || replicaOrAny;\n\n  function wrapValue(membrane, value) {\n      return membrane.valueIsObservable(value) ? membrane.getProxy(value) : value;\n  }\n  /**\n   * Unwrap property descriptors will set value on original descriptor\n   * We only need to unwrap if value is specified\n   * @param descriptor external descrpitor provided to define new property on original value\n   */\n  function unwrapDescriptor(descriptor) {\n      if (hasOwnProperty.call(descriptor, 'value')) {\n          descriptor.value = unwrap(descriptor.value);\n      }\n      return descriptor;\n  }\n  function lockShadowTarget(membrane, shadowTarget, originalTarget) {\n      const targetKeys = ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n      targetKeys.forEach((key) => {\n          let descriptor = getOwnPropertyDescriptor(originalTarget, key);\n          // We do not need to wrap the descriptor if configurable\n          // Because we can deal with wrapping it when user goes through\n          // Get own property descriptor. There is also a chance that this descriptor\n          // could change sometime in the future, so we can defer wrapping\n          // until we need to\n          if (!descriptor.configurable) {\n              descriptor = wrapDescriptor(membrane, descriptor, wrapValue);\n          }\n          ObjectDefineProperty(shadowTarget, key, descriptor);\n      });\n      preventExtensions(shadowTarget);\n  }\n  class ReactiveProxyHandler {\n      constructor(membrane, value) {\n          this.originalTarget = value;\n          this.membrane = membrane;\n      }\n      get(shadowTarget, key) {\n          const { originalTarget, membrane } = this;\n          const value = originalTarget[key];\n          const { valueObserved } = membrane;\n          valueObserved(originalTarget, key);\n          return membrane.getProxy(value);\n      }\n      set(shadowTarget, key, value) {\n          const { originalTarget, membrane: { valueMutated } } = this;\n          const oldValue = originalTarget[key];\n          if (oldValue !== value) {\n              originalTarget[key] = value;\n              valueMutated(originalTarget, key);\n          }\n          else if (key === 'length' && isArray(originalTarget)) {\n              // fix for issue #236: push will add the new index, and by the time length\n              // is updated, the internal length is already equal to the new length value\n              // therefore, the oldValue is equal to the value. This is the forking logic\n              // to support this use case.\n              valueMutated(originalTarget, key);\n          }\n          return true;\n      }\n      deleteProperty(shadowTarget, key) {\n          const { originalTarget, membrane: { valueMutated } } = this;\n          delete originalTarget[key];\n          valueMutated(originalTarget, key);\n          return true;\n      }\n      apply(shadowTarget, thisArg, argArray) {\n          /* No op */\n      }\n      construct(target, argArray, newTarget) {\n          /* No op */\n      }\n      has(shadowTarget, key) {\n          const { originalTarget, membrane: { valueObserved } } = this;\n          valueObserved(originalTarget, key);\n          return key in originalTarget;\n      }\n      ownKeys(shadowTarget) {\n          const { originalTarget } = this;\n          return ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n      }\n      isExtensible(shadowTarget) {\n          const shadowIsExtensible = isExtensible(shadowTarget);\n          if (!shadowIsExtensible) {\n              return shadowIsExtensible;\n          }\n          const { originalTarget, membrane } = this;\n          const targetIsExtensible = isExtensible(originalTarget);\n          if (!targetIsExtensible) {\n              lockShadowTarget(membrane, shadowTarget, originalTarget);\n          }\n          return targetIsExtensible;\n      }\n      setPrototypeOf(shadowTarget, prototype) {\n      }\n      getPrototypeOf(shadowTarget) {\n          const { originalTarget } = this;\n          return getPrototypeOf(originalTarget);\n      }\n      getOwnPropertyDescriptor(shadowTarget, key) {\n          const { originalTarget, membrane } = this;\n          const { valueObserved } = this.membrane;\n          // keys looked up via hasOwnProperty need to be reactive\n          valueObserved(originalTarget, key);\n          let desc = getOwnPropertyDescriptor(originalTarget, key);\n          if (isUndefined(desc)) {\n              return desc;\n          }\n          const shadowDescriptor = getOwnPropertyDescriptor(shadowTarget, key);\n          if (!isUndefined(shadowDescriptor)) {\n              return shadowDescriptor;\n          }\n          // Note: by accessing the descriptor, the key is marked as observed\n          // but access to the value, setter or getter (if available) cannot observe\n          // mutations, just like regular methods, in which case we just do nothing.\n          desc = wrapDescriptor(membrane, desc, wrapValue);\n          if (!desc.configurable) {\n              // If descriptor from original target is not configurable,\n              // We must copy the wrapped descriptor over to the shadow target.\n              // Otherwise, proxy will throw an invariant error.\n              // This is our last chance to lock the value.\n              // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\n              ObjectDefineProperty(shadowTarget, key, desc);\n          }\n          return desc;\n      }\n      preventExtensions(shadowTarget) {\n          const { originalTarget, membrane } = this;\n          lockShadowTarget(membrane, shadowTarget, originalTarget);\n          preventExtensions(originalTarget);\n          return true;\n      }\n      defineProperty(shadowTarget, key, descriptor) {\n          const { originalTarget, membrane } = this;\n          const { valueMutated } = membrane;\n          const { configurable } = descriptor;\n          // We have to check for value in descriptor\n          // because Object.freeze(proxy) calls this method\n          // with only { configurable: false, writeable: false }\n          // Additionally, method will only be called with writeable:false\n          // if the descriptor has a value, as opposed to getter/setter\n          // So we can just check if writable is present and then see if\n          // value is present. This eliminates getter and setter descriptors\n          if (hasOwnProperty.call(descriptor, 'writable') && !hasOwnProperty.call(descriptor, 'value')) {\n              const originalDescriptor = getOwnPropertyDescriptor(originalTarget, key);\n              descriptor.value = originalDescriptor.value;\n          }\n          ObjectDefineProperty(originalTarget, key, unwrapDescriptor(descriptor));\n          if (configurable === false) {\n              ObjectDefineProperty(shadowTarget, key, wrapDescriptor(membrane, descriptor, wrapValue));\n          }\n          valueMutated(originalTarget, key);\n          return true;\n      }\n  }\n\n  function wrapReadOnlyValue(membrane, value) {\n      return membrane.valueIsObservable(value) ? membrane.getReadOnlyProxy(value) : value;\n  }\n  class ReadOnlyHandler {\n      constructor(membrane, value) {\n          this.originalTarget = value;\n          this.membrane = membrane;\n      }\n      get(shadowTarget, key) {\n          const { membrane, originalTarget } = this;\n          const value = originalTarget[key];\n          const { valueObserved } = membrane;\n          valueObserved(originalTarget, key);\n          return membrane.getReadOnlyProxy(value);\n      }\n      set(shadowTarget, key, value) {\n          return false;\n      }\n      deleteProperty(shadowTarget, key) {\n          return false;\n      }\n      apply(shadowTarget, thisArg, argArray) {\n          /* No op */\n      }\n      construct(target, argArray, newTarget) {\n          /* No op */\n      }\n      has(shadowTarget, key) {\n          const { originalTarget, membrane: { valueObserved } } = this;\n          valueObserved(originalTarget, key);\n          return key in originalTarget;\n      }\n      ownKeys(shadowTarget) {\n          const { originalTarget } = this;\n          return ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n      }\n      setPrototypeOf(shadowTarget, prototype) {\n      }\n      getOwnPropertyDescriptor(shadowTarget, key) {\n          const { originalTarget, membrane } = this;\n          const { valueObserved } = membrane;\n          // keys looked up via hasOwnProperty need to be reactive\n          valueObserved(originalTarget, key);\n          let desc = getOwnPropertyDescriptor(originalTarget, key);\n          if (isUndefined(desc)) {\n              return desc;\n          }\n          const shadowDescriptor = getOwnPropertyDescriptor(shadowTarget, key);\n          if (!isUndefined(shadowDescriptor)) {\n              return shadowDescriptor;\n          }\n          // Note: by accessing the descriptor, the key is marked as observed\n          // but access to the value or getter (if available) cannot be observed,\n          // just like regular methods, in which case we just do nothing.\n          desc = wrapDescriptor(membrane, desc, wrapReadOnlyValue);\n          if (hasOwnProperty.call(desc, 'set')) {\n              desc.set = undefined; // readOnly membrane does not allow setters\n          }\n          if (!desc.configurable) {\n              // If descriptor from original target is not configurable,\n              // We must copy the wrapped descriptor over to the shadow target.\n              // Otherwise, proxy will throw an invariant error.\n              // This is our last chance to lock the value.\n              // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\n              ObjectDefineProperty(shadowTarget, key, desc);\n          }\n          return desc;\n      }\n      preventExtensions(shadowTarget) {\n          return false;\n      }\n      defineProperty(shadowTarget, key, descriptor) {\n          return false;\n      }\n  }\n  function createShadowTarget(value) {\n      let shadowTarget = undefined;\n      if (isArray(value)) {\n          shadowTarget = [];\n      }\n      else if (isObject(value)) {\n          shadowTarget = {};\n      }\n      return shadowTarget;\n  }\n  const ObjectDotPrototype = Object.prototype;\n  function defaultValueIsObservable(value) {\n      // intentionally checking for null\n      if (value === null) {\n          return false;\n      }\n      // treat all non-object types, including undefined, as non-observable values\n      if (typeof value !== 'object') {\n          return false;\n      }\n      if (isArray(value)) {\n          return true;\n      }\n      const proto = getPrototypeOf(value);\n      return (proto === ObjectDotPrototype || proto === null || getPrototypeOf(proto) === null);\n  }\n  const defaultValueObserved = (obj, key) => {\n      /* do nothing */\n  };\n  const defaultValueMutated = (obj, key) => {\n      /* do nothing */\n  };\n  const defaultValueDistortion = (value) => value;\n  function wrapDescriptor(membrane, descriptor, getValue) {\n      const { set, get } = descriptor;\n      if (hasOwnProperty.call(descriptor, 'value')) {\n          descriptor.value = getValue(membrane, descriptor.value);\n      }\n      else {\n          if (!isUndefined(get)) {\n              descriptor.get = function () {\n                  // invoking the original getter with the original target\n                  return getValue(membrane, get.call(unwrap(this)));\n              };\n          }\n          if (!isUndefined(set)) {\n              descriptor.set = function (value) {\n                  // At this point we don't have a clear indication of whether\n                  // or not a valid mutation will occur, we don't have the key,\n                  // and we are not sure why and how they are invoking this setter.\n                  // Nevertheless we preserve the original semantics by invoking the\n                  // original setter with the original target and the unwrapped value\n                  set.call(unwrap(this), membrane.unwrapProxy(value));\n              };\n          }\n      }\n      return descriptor;\n  }\n  class ReactiveMembrane {\n      constructor(options) {\n          this.valueDistortion = defaultValueDistortion;\n          this.valueMutated = defaultValueMutated;\n          this.valueObserved = defaultValueObserved;\n          this.valueIsObservable = defaultValueIsObservable;\n          this.objectGraph = new WeakMap();\n          if (!isUndefined(options)) {\n              const { valueDistortion, valueMutated, valueObserved, valueIsObservable } = options;\n              this.valueDistortion = isFunction(valueDistortion) ? valueDistortion : defaultValueDistortion;\n              this.valueMutated = isFunction(valueMutated) ? valueMutated : defaultValueMutated;\n              this.valueObserved = isFunction(valueObserved) ? valueObserved : defaultValueObserved;\n              this.valueIsObservable = isFunction(valueIsObservable) ? valueIsObservable : defaultValueIsObservable;\n          }\n      }\n      getProxy(value) {\n          const unwrappedValue = unwrap(value);\n          const distorted = this.valueDistortion(unwrappedValue);\n          if (this.valueIsObservable(distorted)) {\n              const o = this.getReactiveState(unwrappedValue, distorted);\n              // when trying to extract the writable version of a readonly\n              // we return the readonly.\n              return o.readOnly === value ? value : o.reactive;\n          }\n          return distorted;\n      }\n      getReadOnlyProxy(value) {\n          value = unwrap(value);\n          const distorted = this.valueDistortion(value);\n          if (this.valueIsObservable(distorted)) {\n              return this.getReactiveState(value, distorted).readOnly;\n          }\n          return distorted;\n      }\n      unwrapProxy(p) {\n          return unwrap(p);\n      }\n      getReactiveState(value, distortedValue) {\n          const { objectGraph, } = this;\n          let reactiveState = objectGraph.get(distortedValue);\n          if (reactiveState) {\n              return reactiveState;\n          }\n          const membrane = this;\n          reactiveState = {\n              get reactive() {\n                  const reactiveHandler = new ReactiveProxyHandler(membrane, distortedValue);\n                  // caching the reactive proxy after the first time it is accessed\n                  const proxy = new Proxy(createShadowTarget(distortedValue), reactiveHandler);\n                  registerProxy(proxy, value);\n                  ObjectDefineProperty(this, 'reactive', { value: proxy });\n                  return proxy;\n              },\n              get readOnly() {\n                  const readOnlyHandler = new ReadOnlyHandler(membrane, distortedValue);\n                  // caching the readOnly proxy after the first time it is accessed\n                  const proxy = new Proxy(createShadowTarget(distortedValue), readOnlyHandler);\n                  registerProxy(proxy, value);\n                  ObjectDefineProperty(this, 'readOnly', { value: proxy });\n                  return proxy;\n              }\n          };\n          objectGraph.set(distortedValue, reactiveState);\n          return reactiveState;\n      }\n  }\n  /** version: 0.26.0 */\n\n  function wrap(data, mutationCallback) {\n\n    let membrane = new ReactiveMembrane({\n      valueMutated(target, key) {\n        mutationCallback(target, key);\n      }\n\n    });\n    return {\n      data: membrane.getProxy(data),\n      membrane: membrane\n    };\n  }\n  function unwrap$1(membrane, observable) {\n    let unwrappedData = membrane.unwrapProxy(observable);\n    let copy = {};\n    Object.keys(unwrappedData).forEach(key => {\n      if (['$el', '$refs', '$nextTick', '$watch'].includes(key)) return;\n      copy[key] = unwrappedData[key];\n    });\n    return copy;\n  }\n\n  class Component {\n    constructor(el, componentForClone = null) {\n      this.$el = el;\n      const dataAttr = this.$el.getAttribute('x-data');\n      const dataExpression = dataAttr === '' ? '{}' : dataAttr;\n      const initExpression = this.$el.getAttribute('x-init');\n      this.unobservedData = componentForClone ? componentForClone.getUnobservedData() : saferEval(dataExpression, {\n        $el: this.$el\n      });\n      // Construct a Proxy-based observable. This will be used to handle reactivity.\n\n      let {\n        membrane,\n        data\n      } = this.wrapDataInObservable(this.unobservedData);\n      this.$data = data;\n      this.membrane = membrane; // After making user-supplied data methods reactive, we can now add\n      // our magic properties to the original data for access.\n\n      this.unobservedData.$el = this.$el;\n      this.unobservedData.$refs = this.getRefsProxy();\n      this.nextTickStack = [];\n\n      this.unobservedData.$nextTick = callback => {\n        this.nextTickStack.push(callback);\n      };\n\n      this.watchers = {};\n\n      this.unobservedData.$watch = (property, callback) => {\n        if (!this.watchers[property]) this.watchers[property] = [];\n        this.watchers[property].push(callback);\n      };\n\n      let canonicalComponentElementReference = componentForClone ? componentForClone.$el : this.$el; // Register custom magic properties.\n\n      Object.entries(Alpine.magicProperties).forEach(([name, callback]) => {\n        Object.defineProperty(this.unobservedData, `$${name}`, {\n          get: function get() {\n            return callback(canonicalComponentElementReference);\n          }\n        });\n      });\n      this.showDirectiveStack = [];\n      this.showDirectiveLastElement;\n      var initReturnedCallback; // If x-init is present AND we aren't cloning (skip x-init on clone)\n\n      if (initExpression && !componentForClone) {\n        // We want to allow data manipulation, but not trigger DOM updates just yet.\n        // We haven't even initialized the elements with their Alpine bindings. I mean c'mon.\n        this.pauseReactivity = true;\n        initReturnedCallback = this.evaluateReturnExpression(this.$el, initExpression);\n        this.pauseReactivity = false;\n      } // Register all our listeners and set all our attribute bindings.\n\n\n      this.initializeElements(this.$el); // Use mutation observer to detect new elements being added within this component at run-time.\n      // Alpine's just so darn flexible amirite?\n\n      this.listenForNewElementsToInitialize();\n\n      if (typeof initReturnedCallback === 'function') {\n        // Run the callback returned from the \"x-init\" hook to allow the user to do stuff after\n        // Alpine's got it's grubby little paws all over everything.\n        initReturnedCallback.call(this.$data);\n      }\n\n      componentForClone || setTimeout(() => {\n        Alpine.onComponentInitializeds.forEach(callback => callback(this));\n      }, 0);\n    }\n\n    getUnobservedData() {\n      return unwrap$1(this.membrane, this.$data);\n    }\n\n    wrapDataInObservable(data) {\n      var self = this;\n      let updateDom = debounce(function () {\n        self.updateElements(self.$el);\n      }, 0);\n      return wrap(data, (target, key) => {\n        if (self.watchers[key]) {\n          // If there's a watcher for this specific key, run it.\n          self.watchers[key].forEach(callback => callback(target[key]));\n        } else {\n          // Let's walk through the watchers with \"dot-notation\" (foo.bar) and see\n          // if this mutation fits any of them.\n          Object.keys(self.watchers).filter(i => i.includes('.')).forEach(fullDotNotationKey => {\n            let dotNotationParts = fullDotNotationKey.split('.'); // If this dot-notation watcher's last \"part\" doesn't match the current\n            // key, then skip it early for performance reasons.\n\n            if (key !== dotNotationParts[dotNotationParts.length - 1]) return; // Now, walk through the dot-notation \"parts\" recursively to find\n            // a match, and call the watcher if one's found.\n\n            dotNotationParts.reduce((comparisonData, part) => {\n              if (Object.is(target, comparisonData)) {\n                // Run the watchers.\n                self.watchers[fullDotNotationKey].forEach(callback => callback(target[key]));\n              }\n\n              return comparisonData[part];\n            }, self.getUnobservedData());\n          });\n        } // Don't react to data changes for cases like the `x-created` hook.\n\n\n        if (self.pauseReactivity) return;\n        updateDom();\n      });\n    }\n\n    walkAndSkipNestedComponents(el, callback, initializeComponentCallback = () => {}) {\n      walk(el, el => {\n        // We've hit a component.\n        if (el.hasAttribute('x-data')) {\n          // If it's not the current one.\n          if (!el.isSameNode(this.$el)) {\n            // Initialize it if it's not.\n            if (!el.__x) initializeComponentCallback(el); // Now we'll let that sub-component deal with itself.\n\n            return false;\n          }\n        }\n\n        return callback(el);\n      });\n    }\n\n    initializeElements(rootEl, extraVars = () => {}) {\n      this.walkAndSkipNestedComponents(rootEl, el => {\n        // Don't touch spawns from for loop\n        if (el.__x_for_key !== undefined) return false; // Don't touch spawns from if directives\n\n        if (el.__x_inserted_me !== undefined) return false;\n        this.initializeElement(el, extraVars);\n      }, el => {\n        el.__x = new Component(el);\n      });\n      this.executeAndClearRemainingShowDirectiveStack();\n      this.executeAndClearNextTickStack(rootEl);\n    }\n\n    initializeElement(el, extraVars) {\n      // To support class attribute merging, we have to know what the element's\n      // original class attribute looked like for reference.\n      if (el.hasAttribute('class') && getXAttrs(el, this).length > 0) {\n        el.__x_original_classes = convertClassStringToArray(el.getAttribute('class'));\n      }\n\n      this.registerListeners(el, extraVars);\n      this.resolveBoundAttributes(el, true, extraVars);\n    }\n\n    updateElements(rootEl, extraVars = () => {}) {\n      this.walkAndSkipNestedComponents(rootEl, el => {\n        // Don't touch spawns from for loop (and check if the root is actually a for loop in a parent, don't skip it.)\n        if (el.__x_for_key !== undefined && !el.isSameNode(this.$el)) return false;\n        this.updateElement(el, extraVars);\n      }, el => {\n        el.__x = new Component(el);\n      });\n      this.executeAndClearRemainingShowDirectiveStack();\n      this.executeAndClearNextTickStack(rootEl);\n    }\n\n    executeAndClearNextTickStack(el) {\n      // Skip spawns from alpine directives\n      if (el === this.$el && this.nextTickStack.length > 0) {\n        // We run the tick stack after the next frame to allow any\n        // running transitions to pass the initial show stage.\n        requestAnimationFrame(() => {\n          while (this.nextTickStack.length > 0) {\n            this.nextTickStack.shift()();\n          }\n        });\n      }\n    }\n\n    executeAndClearRemainingShowDirectiveStack() {\n      // The goal here is to start all the x-show transitions\n      // and build a nested promise chain so that elements\n      // only hide when the children are finished hiding.\n      this.showDirectiveStack.reverse().map(thing => {\n        return new Promise(resolve => {\n          thing(finish => {\n            resolve(finish);\n          });\n        });\n      }).reduce((nestedPromise, promise) => {\n        return nestedPromise.then(() => {\n          return promise.then(finish => finish());\n        });\n      }, Promise.resolve(() => {})); // We've processed the handler stack. let's clear it.\n\n      this.showDirectiveStack = [];\n      this.showDirectiveLastElement = undefined;\n    }\n\n    updateElement(el, extraVars) {\n      this.resolveBoundAttributes(el, false, extraVars);\n    }\n\n    registerListeners(el, extraVars) {\n      getXAttrs(el, this).forEach(({\n        type,\n        value,\n        modifiers,\n        expression\n      }) => {\n        switch (type) {\n          case 'on':\n            registerListener(this, el, value, modifiers, expression, extraVars);\n            break;\n\n          case 'model':\n            registerModelListener(this, el, modifiers, expression, extraVars);\n            break;\n        }\n      });\n    }\n\n    resolveBoundAttributes(el, initialUpdate = false, extraVars) {\n      let attrs = getXAttrs(el, this);\n\n      if (el.type !== undefined && el.type === 'radio') {\n        // If there's an x-model on a radio input, move it to end of attribute list\n        // to ensure that x-bind:value (if present) is processed first.\n        const modelIdx = attrs.findIndex(attr => attr.type === 'model');\n\n        if (modelIdx > -1) {\n          attrs.push(attrs.splice(modelIdx, 1)[0]);\n        }\n      }\n\n      attrs.forEach(({\n        type,\n        value,\n        modifiers,\n        expression\n      }) => {\n        switch (type) {\n          case 'model':\n            handleAttributeBindingDirective(this, el, 'value', expression, extraVars, type, modifiers);\n            break;\n\n          case 'bind':\n            // The :key binding on an x-for is special, ignore it.\n            if (el.tagName.toLowerCase() === 'template' && value === 'key') return;\n            handleAttributeBindingDirective(this, el, value, expression, extraVars, type, modifiers);\n            break;\n\n          case 'text':\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\n            handleTextDirective(el, output, expression);\n            break;\n\n          case 'html':\n            handleHtmlDirective(this, el, expression, extraVars);\n            break;\n\n          case 'show':\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\n            handleShowDirective(this, el, output, modifiers, initialUpdate);\n            break;\n\n          case 'if':\n            // If this element also has x-for on it, don't process x-if.\n            // We will let the \"x-for\" directive handle the \"if\"ing.\n            if (attrs.some(i => i.type === 'for')) return;\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\n            handleIfDirective(this, el, output, initialUpdate, extraVars);\n            break;\n\n          case 'for':\n            handleForDirective(this, el, expression, initialUpdate, extraVars);\n            break;\n\n          case 'cloak':\n            el.removeAttribute('x-cloak');\n            break;\n        }\n      });\n    }\n\n    evaluateReturnExpression(el, expression, extraVars = () => {}) {\n      return saferEval(expression, this.$data, _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        $dispatch: this.getDispatchFunction(el)\n      }));\n    }\n\n    evaluateCommandExpression(el, expression, extraVars = () => {}) {\n      return saferEvalNoReturn(expression, this.$data, _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        $dispatch: this.getDispatchFunction(el)\n      }));\n    }\n\n    getDispatchFunction(el) {\n      return (event, detail = {}) => {\n        el.dispatchEvent(new CustomEvent(event, {\n          detail,\n          bubbles: true\n        }));\n      };\n    }\n\n    listenForNewElementsToInitialize() {\n      const targetNode = this.$el;\n      const observerOptions = {\n        childList: true,\n        attributes: true,\n        subtree: true\n      };\n      const observer = new MutationObserver(mutations => {\n        for (let i = 0; i < mutations.length; i++) {\n          // Filter out mutations triggered from child components.\n          const closestParentComponent = mutations[i].target.closest('[x-data]');\n          if (!(closestParentComponent && closestParentComponent.isSameNode(this.$el))) continue;\n\n          if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\n            const rawData = saferEval(mutations[i].target.getAttribute('x-data') || '{}', {\n              $el: this.$el\n            });\n            Object.keys(rawData).forEach(key => {\n              if (this.$data[key] !== rawData[key]) {\n                this.$data[key] = rawData[key];\n              }\n            });\n          }\n\n          if (mutations[i].addedNodes.length > 0) {\n            mutations[i].addedNodes.forEach(node => {\n              if (node.nodeType !== 1 || node.__x_inserted_me) return;\n\n              if (node.matches('[x-data]') && !node.__x) {\n                node.__x = new Component(node);\n                return;\n              }\n\n              this.initializeElements(node);\n            });\n          }\n        }\n      });\n      observer.observe(targetNode, observerOptions);\n    }\n\n    getRefsProxy() {\n      var self = this;\n      var refObj = {};\n      // One of the goals of this is to not hold elements in memory, but rather re-evaluate\n      // the DOM when the system needs something from it. This way, the framework is flexible and\n      // friendly to outside DOM changes from libraries like Vue/Livewire.\n      // For this reason, I'm using an \"on-demand\" proxy to fake a \"$refs\" object.\n\n      return new Proxy(refObj, {\n        get(object, property) {\n          if (property === '$isAlpineProxy') return true;\n          var ref; // We can't just query the DOM because it's hard to filter out refs in\n          // nested components.\n\n          self.walkAndSkipNestedComponents(self.$el, el => {\n            if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\n              ref = el;\n            }\n          });\n          return ref;\n        }\n\n      });\n    }\n\n  }\n\n  const Alpine = {\n    version: \"2.5.0\",\n    pauseMutationObserver: false,\n    magicProperties: {},\n    onComponentInitializeds: [],\n    start: async function start() {\n      if (!isTesting()) {\n        await domReady();\n      }\n\n      this.discoverComponents(el => {\n        this.initializeComponent(el);\n      }); // It's easier and more performant to just support Turbolinks than listen\n      // to MutationObserver mutations at the document level.\n\n      document.addEventListener(\"turbolinks:load\", () => {\n        this.discoverUninitializedComponents(el => {\n          this.initializeComponent(el);\n        });\n      });\n      this.listenForNewUninitializedComponentsAtRunTime(el => {\n        this.initializeComponent(el);\n      });\n    },\n    discoverComponents: function discoverComponents(callback) {\n      const rootEls = document.querySelectorAll('[x-data]');\n      rootEls.forEach(rootEl => {\n        callback(rootEl);\n      });\n    },\n    discoverUninitializedComponents: function discoverUninitializedComponents(callback, el = null) {\n      const rootEls = (el || document).querySelectorAll('[x-data]');\n      Array.from(rootEls).filter(el => el.__x === undefined).forEach(rootEl => {\n        callback(rootEl);\n      });\n    },\n    listenForNewUninitializedComponentsAtRunTime: function listenForNewUninitializedComponentsAtRunTime(callback) {\n      const targetNode = document.querySelector('body');\n      const observerOptions = {\n        childList: true,\n        attributes: true,\n        subtree: true\n      };\n      const observer = new MutationObserver(mutations => {\n        if (this.pauseMutationObserver) return;\n\n        for (let i = 0; i < mutations.length; i++) {\n          if (mutations[i].addedNodes.length > 0) {\n            mutations[i].addedNodes.forEach(node => {\n              // Discard non-element nodes (like line-breaks)\n              if (node.nodeType !== 1) return; // Discard any changes happening within an existing component.\n              // They will take care of themselves.\n\n              if (node.parentElement && node.parentElement.closest('[x-data]')) return;\n              this.discoverUninitializedComponents(el => {\n                this.initializeComponent(el);\n              }, node.parentElement);\n            });\n          }\n        }\n      });\n      observer.observe(targetNode, observerOptions);\n    },\n    initializeComponent: function initializeComponent(el) {\n      if (!el.__x) {\n        // Wrap in a try/catch so that we don't prevent other components\n        // from initializing when one component contains an error.\n        try {\n          el.__x = new Component(el);\n        } catch (error) {\n          setTimeout(() => {\n            throw error;\n          }, 0);\n        }\n      }\n    },\n    clone: function clone(component, newEl) {\n      if (!newEl.__x) {\n        newEl.__x = new Component(newEl, component);\n      }\n    },\n    addMagicProperty: function addMagicProperty(name, callback) {\n      this.magicProperties[name] = callback;\n    },\n    onComponentInitialized: function onComponentInitialized(callback) {\n      this.onComponentInitializeds.push(callback);\n    }\n  };\n\n  if (!isTesting()) {\n    window.Alpine = Alpine;\n\n    if (window.deferLoadingAlpine) {\n      window.deferLoadingAlpine(function () {\n        window.Alpine.start();\n      });\n    } else {\n      window.Alpine.start();\n    }\n  }\n\n  return Alpine;\n\n})));\n","import 'alpinejs';\n\n/**\n * Echo exposes an expressive API for subscribing to channels and listening\n * for events that are broadcast by Laravel. Echo and event broadcasting\n * allows your team to easily build robust real-time web applications.\n */\n\n// import Echo from 'laravel-echo'\n\n// window.Pusher = require('pusher-js');\n\n// window.Echo = new Echo({\n//     broadcaster: 'pusher',\n//     key: process.env.MIX_PUSHER_APP_KEY,\n//     cluster: process.env.MIX_PUSHER_APP_CLUSTER,\n//     forceTLS: true\n// });\n","require('./bootstrap');\n"],"sourceRoot":""}